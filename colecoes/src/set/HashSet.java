package set;

public class HashSet {
    /*
    HASHSET -> O ACESSO AOS DADOS É MAIS RAPIDO QUE EM
    UM TREESET, MAS NADA GARANTE QUE OS DADOS ESTARAM ORDENADOS.
    ESCOLHA ESTE CONJUNTO QUANDO A SOLUCAO EXIGIR ELEMENTOS
    UNICOS E A ORDEM NAO FOR IMPORTANTE.

    EXEMPLO DE APLICACAO --> PODERIAMOS USAR ESTA IMPLEMENTACAO
    PARA CRIAR UM CATALOGO PESSOAL DAS CANCOES DA NOSSA DISCOGRAFIA;
     */

    /*
    TREESET -> OS DADOS SAO  CLASSIFICADOS, MAS O ACESSO
    E MAIS LENTO QUE EM UM HASHSET. SE A NECESSIDADE  FOR UM CONJUNTO COM ELEMENTOS
    NAO DUPLICADOS E ACESSO EM ORDEM NATURAL, PREFIRA O TREESET. E RECOMENDADO UTILIZAR
    ESTA COLECAO PARA AS MESMAS APLICACOES DE HASHSET, COM A VANTAGEM DOS OBJETOSS
    EM ORDEM NATURAL.

    LINKEDHASHSET --> E DERIVADA DE HASHSET, MAS MANTEM UMA LISTA
    DUPLAMENTE LIGADA ATRAVES DE SEUS ITENS. SEUS ELEMENTOS SAO
    ITERADOS NA ORDEM EM QUE FORAM INSERIDOS. OPCIONALMENTE É
    POSSIVEL CRIAR UM LINKEDHASHSET QUE SEJA PERCORRIDO NA ORDEM
    EM QUE OS ELEMENTOS FORAM ACESSADOS NA ULTIMA ITERACAO.

    EXEMPLO DE APLICACAO : PODERIAMOS USAR ESTA IMPLEMENTACAO PARA REGISTRAR
    A  CHEGADA DOS CORREDORES DE UMA MARATONA;
     */
}
